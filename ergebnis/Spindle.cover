       #/usr/bin/python
       # -*- coding: utf-8 -*-
       #
       # parse Gcode
       #
       
>>>>>> try:
>>>>>>     import RPi.GPIO as GPIO
>>>>>> except ImportError:
>>>>>>     from FakeGPIO import FakeGPIO as GPIO
>>>>>> import logging
>>>>>> logging.basicConfig(level=logging.INFO, format="%(message)s")
       
       
>>>>>> class Spindle(object):
           """Abstract Class for Spindle
           Spindle can rotate clockwise or counterclockwise
           in given Speed
           """
       
>>>>>>     CW = -1 # clockwise direction
>>>>>>     CCW = 1 # counter clockwise direction
       
>>>>>>     def __init__(self, speed=1.0):
    1:         self.speed = speed
    1:         self.running = False
       
>>>>>>     def rotate(self, direction, speed=None):
               """
               turn on spindle and rotate in direction with speed
               """
    1:         if speed is None:
    1:             speed = self.speed
    1:         self.running = True
    1:         logging.info("Turn Spindle in Direction %s with speed %s", direction, speed)
               
>>>>>>     def get_state(self):
 6923:         if self.running:
 6921:             return("%s@%s" % (self.running, self.speed))
               else:
    2:             return("not running")
       
>>>>>>     def unhold(self):
               """
               power off Spindle
               """
    2:         logging.info("Power Off Spindle")
    2:         self.running = False
       
       
>>>>>> class Laser(Spindle):
           """Abstract Class for Spindle
           Spindle can rotate clockwise or counterclockwise
           in given Speed
           """
       
>>>>>>     def __init__(self, power_pin, speed=1.0):
>>>>>>         self.power_pin = power_pin
>>>>>>         GPIO.setup(self.power_pin, GPIO.OUT)
>>>>>>         Spindle.__init__(self, speed=1.0)
       
>>>>>>     def rotate(self, direction, speed=None):
               """
               turn on spindle and rotate in direction with speed
               """
>>>>>>         logging.info("Turn Laser on")
>>>>>>         GPIO.output(self.power_pin, 1)
>>>>>>         self.running = True
               
>>>>>>     def unhold(self):
               """
               power off Spindle
               """
>>>>>>         logging.info("Turn Laser off")
>>>>>>         GPIO.output(self.power_pin, 0)
>>>>>>         self.running = False
